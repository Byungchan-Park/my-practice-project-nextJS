{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jspar\\\\Downloads\\\\my-practice-project\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport \"../static/style/styles.scss\";\n\nclass MyApp extends App {\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  // 1. layout 유지\n  // 2. state(상태) 유지하면서 navigating\n  // 3. componentDidCatch => 에러핸들링\n  // 4. 페이지들에 데이터 추가 (cf. GraphQL queries)\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/jspar/Downloads/my-practice-project/pages/_app.js"],"names":["React","App","MyApp","render","Component","pageProps","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAO,6BAAP;;AAEA,MAAMC,KAAN,SAAoBD,GAApB,CAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WAAO,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAhBqB;;AAmBxB,eAAeH,KAAf","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport \"../static/style/styles.scss\";\n\nclass MyApp extends App {\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n\n  // 1. layout 유지\n  // 2. state(상태) 유지하면서 navigating\n  // 3. componentDidCatch => 에러핸들링\n  // 4. 페이지들에 데이터 추가 (cf. GraphQL queries)\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return <Component {...pageProps} />;\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}