{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\jspar\\\\Downloads\\\\next_3\\uD30C\\uC77C \\uC555\\uCD95\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport App from \"../components/app\";\n\nvar IndexPage = function IndexPage() {\n  var _useState = useState(\"next\"),\n      name = _useState[0],\n      setName = _useState[1]; // 함수형 컴포넌트에서 state를 선언하는 방식\n\n\n  var handleChange = function handleChange(e) {\n    setName(e.target.value); // input의 value로 set state\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), __jsx(App, {\n    data: name // props를 전달\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), __jsx(Link, {\n    href: \"/signin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\")), __jsx(\"button\", {\n    onClick: function onClick() {\n      return Router.push(\"/signin\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"\\uB85C\\uADF8\\uC778 \\uD558\\uAE30\"));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["C:/Users/jspar/Downloads/next_3파일 압축/pages/index.js"],"names":["useState","Router","Link","App","IndexPage","name","setName","handleChange","e","target","value","push"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,kBACEJ,QAAQ,CAAC,MAAD,CADV;AAAA,MACfK,IADe;AAAA,MACTC,OADS,iBACoB;;;AAC1C,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CAD0B,CACD;AAC1B,GAFD;;AAIA,SACE,4BACE;AAAO,IAAA,QAAQ,EAAEH,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AACE,IAAA,IAAI,EAAEF,IADR,CACc;AADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CALF,EAQE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMJ,MAAM,CAACU,IAAP,CAAY,SAAZ,CAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCARF,CADF;AAYD,CAlBD;;AAoBA,eAAeP,SAAf","sourcesContent":["import { useState } from \"react\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport App from \"../components/app\";\n\nconst IndexPage = () => {\n  const [name, setName] = useState(\"next\"); // 함수형 컴포넌트에서 state를 선언하는 방식\n  const handleChange = (e) => {\n    setName(e.target.value); // input의 value로 set state\n  };\n\n  return (\n    <>\n      <input onChange={handleChange}></input>\n      <App\n        data={name} // props를 전달\n      />\n      <Link href=\"/signin\">\n        <p>로그인하기</p>\n      </Link>\n      <button onClick={() => Router.push(\"/signin\")}>로그인 하기</button>\n    </>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}